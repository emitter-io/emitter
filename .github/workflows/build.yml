name: Build Binary
on: [push]
#on:
#  push:
#    branches:    
#      - master
jobs:
  version:
    name: Prepare a release
    runs-on: macos-latest
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v1 
      with:
        token: ${{secrets.github_token}}   

    - name: Upload build number
      uses: actions/upload-artifact@v1
      with:
        name: BUILD_NUMBER
        path: BUILD_NUMBER

    - name: Create GitHub release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v2.${{ steps.buildnumber.outputs.build_number }}
        release_name: Release v2.${{ steps.buildnumber.outputs.build_number }}
        draft: true

  build:
    name: Build
    needs: version
    runs-on: macos-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [arm, amd64, 386]
    steps:
    - name: Download build number
      uses: actions/download-artifact@v1
      with:
        name: BUILD_NUMBER
    - name: Restore build number
      id: buildnumber
      uses: einaregilsson/build-number@v1 

    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v1

    - name: Build
      env: 
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: |
        go build -o build/emitter-${{ matrix.os }}-${{ matrix.arch }} -i -ldflags "-X github.com/emitter-io/emitter/internal/command/version.version=$BUILD_VERSION -X github.com/emitter-io/emitter/internal/command/version.commit=$GITHUB_SHA" .

    - name: Restore release
      id: create_release
      uses: actions/create-release@v1.0.0

    - name: Upload release artificat
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build/emitter-${{ matrix.os }}-${{ matrix.arch }}
        asset_name: emitter-${{ matrix.os }}-${{ matrix.arch }}
